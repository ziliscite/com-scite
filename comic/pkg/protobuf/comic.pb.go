// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v5.28.2
// source: comic.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InsertComicRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Author        string                 `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	Artist        string                 `protobuf:"bytes,4,opt,name=artist,proto3" json:"artist,omitempty"`
	Status        string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	Type          string                 `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	Genres        []string               `protobuf:"bytes,7,rep,name=genres,proto3" json:"genres,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InsertComicRequest) Reset() {
	*x = InsertComicRequest{}
	mi := &file_comic_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InsertComicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertComicRequest) ProtoMessage() {}

func (x *InsertComicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comic_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertComicRequest.ProtoReflect.Descriptor instead.
func (*InsertComicRequest) Descriptor() ([]byte, []int) {
	return file_comic_proto_rawDescGZIP(), []int{0}
}

func (x *InsertComicRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *InsertComicRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *InsertComicRequest) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *InsertComicRequest) GetArtist() string {
	if x != nil {
		return x.Artist
	}
	return ""
}

func (x *InsertComicRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *InsertComicRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *InsertComicRequest) GetGenres() []string {
	if x != nil {
		return x.Genres
	}
	return nil
}

type InsertComicResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Slug          string                 `protobuf:"bytes,3,opt,name=slug,proto3" json:"slug,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Author        string                 `protobuf:"bytes,5,opt,name=author,proto3" json:"author,omitempty"`
	Artist        string                 `protobuf:"bytes,6,opt,name=artist,proto3" json:"artist,omitempty"`
	Status        string                 `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	Type          string                 `protobuf:"bytes,8,opt,name=type,proto3" json:"type,omitempty"`
	Genres        []string               `protobuf:"bytes,9,rep,name=genres,proto3" json:"genres,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InsertComicResponse) Reset() {
	*x = InsertComicResponse{}
	mi := &file_comic_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InsertComicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertComicResponse) ProtoMessage() {}

func (x *InsertComicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_comic_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertComicResponse.ProtoReflect.Descriptor instead.
func (*InsertComicResponse) Descriptor() ([]byte, []int) {
	return file_comic_proto_rawDescGZIP(), []int{1}
}

func (x *InsertComicResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *InsertComicResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *InsertComicResponse) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *InsertComicResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *InsertComicResponse) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *InsertComicResponse) GetArtist() string {
	if x != nil {
		return x.Artist
	}
	return ""
}

func (x *InsertComicResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *InsertComicResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *InsertComicResponse) GetGenres() []string {
	if x != nil {
		return x.Genres
	}
	return nil
}

var File_comic_proto protoreflect.FileDescriptor

var file_comic_proto_rawDesc = string([]byte{
	0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x63,
	0x6f, 0x6d, 0x69, 0x63, 0x22, 0xc0, 0x01, 0x0a, 0x12, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x43,
	0x6f, 0x6d, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x72, 0x74, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x72, 0x74,
	0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x22, 0xe5, 0x01, 0x0a, 0x13, 0x49, 0x6e, 0x73, 0x65,
	0x72, 0x74, 0x43, 0x6f, 0x6d, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65,
	0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x32,
	0x54, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x44, 0x0a, 0x0b, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6d, 0x69, 0x63, 0x12, 0x19,
	0x2e, 0x63, 0x6f, 0x6d, 0x69, 0x63, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6d,
	0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x69,
	0x63, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6d, 0x69, 0x63, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x2f, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x7a, 0x69, 0x6c, 0x69, 0x73, 0x63, 0x69, 0x74, 0x65, 0x2f, 0x6d, 0x69,
	0x63, 0x72, 0x6f, 0x2d, 0x63, 0x6f, 0x6d, 0x69, 0x63, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_comic_proto_rawDescOnce sync.Once
	file_comic_proto_rawDescData []byte
)

func file_comic_proto_rawDescGZIP() []byte {
	file_comic_proto_rawDescOnce.Do(func() {
		file_comic_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_comic_proto_rawDesc), len(file_comic_proto_rawDesc)))
	})
	return file_comic_proto_rawDescData
}

var file_comic_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_comic_proto_goTypes = []any{
	(*InsertComicRequest)(nil),  // 0: comic.InsertComicRequest
	(*InsertComicResponse)(nil), // 1: comic.InsertComicResponse
}
var file_comic_proto_depIdxs = []int32{
	0, // 0: comic.ComicService.InsertComic:input_type -> comic.InsertComicRequest
	1, // 1: comic.ComicService.InsertComic:output_type -> comic.InsertComicResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_comic_proto_init() }
func file_comic_proto_init() {
	if File_comic_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_comic_proto_rawDesc), len(file_comic_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_comic_proto_goTypes,
		DependencyIndexes: file_comic_proto_depIdxs,
		MessageInfos:      file_comic_proto_msgTypes,
	}.Build()
	File_comic_proto = out.File
	file_comic_proto_goTypes = nil
	file_comic_proto_depIdxs = nil
}
